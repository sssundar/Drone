import sys, copy
import numpy as np
from quaternions import *
from animate import *

def f_g(q, a):
    r, v = q
    q = [r] + list(v)
    q1, q2, q3, q4 = q
    ax, ay, az = list(a)
    line1 = 2*(q2*q4 - q1*q3) - ax
    line2 = 2*(q1*q2 + q3*q4) - ay
    line3 = 2*(0.5 - q2**2 - q3**2) - az
    return np.array([line1, line2, line3])

def J_g(q):
  r, v = q
  q = [r] + list(v)
  q1, q2, q3, q4 = q
  line1 = [-2*q3, 2*q4, -2*q1, 2*q2]
  line2 = [2*q2, 2*q1, 2*q4, 2*q3]
  line3 = [0, -4*q2, -4*q3, 0]
  return np.matrix([line1, line2, line3])

def f_b(q, b, m):
  r, v = q
  q = [r] + list(v)
  q1, q2, q3, q4 = q
  bx, _, bz = list(b)
  mx, my, mz = list(m)
  line1 = 2*bx*(0.5 - q3**2 - q4**2) + 2*bz*(q2*q4 - q1*q3) - mx
  line2 = 2*bx*(q2*q3 - q1*q4) + 2*bz*(q1*q2 + q3*q4) - my
  line3 = 2*bx*(q1*q3 + q2*q4) + 2*bz*(0.5 - q2**2 - q3**2) - mz
  return np.array([line1, line2, line3])

def J_b(q, b):
  r, v = q
  q = [r] + list(v)
  q1, q2, q3, q4 = q
  bx, _, bz = b

  line1 = [-2*bz*q3, 2*bz*q4, -4*bx*q3 - 2*bz*q1, -4*bx*q4 + 2*bz*q2]
  line2 = [-2*bx*q4 + 2*bz*q2, 2*bx*q3 + 2*bz*q1, 2*bx*q2 + 2*bz*q4, -2*bx*q1 + 2*bz*q3]
  line3 = [2*bx*q3 , 2*bx*q4 - 4*bz*q2, 2*bx*q1 - 4*bz*q3, 2*bx*q2]

  return np.matrix([line1, line2, line3])

def f_gb(q, a, b, m):
  return np.array(list(f_g(q, a)) + list(f_b(q, b, m)))

def J_gb(q, b):
  return np.concatenate((J_g(q), J_b(q, b)), axis=0)

def gradient_f(q, a, b, m):
  return np.array(np.dot(np.transpose(J_b(q, b)), f_b(q, b, m)))[0]
  # return np.array(np.dot(np.transpose(J_gb(q, b)), f_gb(q, a, b, m)))[0]


class Estimator(object):
  def __init__(self, m=None, q_offset=[1, np.asarray([0,0,0])], controller=None):
    self.controller = controller

    #######################
    # Offline Calibration #
    #######################

    self.q_offset = q_offset
    self.offset_correction = lambda v: quaternion_rotation(qv=[0,v], qr=quaternion_inverse(self.q_offset))[1]
    self.m = m

    ###################
    # Synchronization #
    ###################

    # A buffer of samples that we synchronize and resample at 100Hz
    # TODO For now, we are just assuming we get perfect 100Hz data.
    self.have_received_gyro = False
    self.have_received_compass = False
    self.have_received_accel = False
    self.gyro = None
    self.compass = None
    self.accel = None
    self.t_previous_s = 0.0
    self.t_s = 0.0

    #######################
    # Attitude Estimation #
    #######################

    # Scale should match the sampling noise configured in wiring.py
    # Note zeta cannot compensate for beta.
    # Note beta can compensate for bias if it is large enough.
    #   Then... you'll jitter if there's mag/acc noise. You don't want to make beta unnecessarily large.
    self.beta = np.pi/100 # np.pi/100 # ~2 dps error in all axes. The idea is to trust the gyro in the near-term and trust the proper acceleration vector (on average, gravity, if we're mostly horizontal, so tied to our controller) and compass heading (independent of our controller) in the long term.
    self.zeta = np.pi/10   # ~18 dps bias error iid in all axes. If this is zero we don't use gyro bias compensation.

    # Bias Accumulator
    self.int_we = np.asarray([0.0,0.0,0.0])

    #############################
    # Dead Reckoning Heuristics #
    #############################

    # None, currently.

    ##########
    # Output #
    ##########

    # Our estimate of the rotation of the body frame relative to the inertial frame.
    self.q = [1, np.asarray([0,0,0])]
    self.ddt_q = [0, np.asarray([0,0,0])]
    self.r = np.asarray([0.0, 0.0, 0.0])
    self.ddt_r = np.asarray([0.0,0.0,0.0])
    return

  def passthrough(self, t_s):
    if (self.have_received_gyro and self.have_received_accel and self.have_received_compass):
      self.t_s = t_s
      self.update(self.gyro, self.compass, self.accel)
      self.have_received_gyro = False
      self.have_received_compass = False
      self.have_received_accel = False

  def process_gyro(self, t_s, sample):
    # Make sure you copy the sample (when you do this for real) so the reference is clean.
    self.have_received_gyro = True
    self.gyro = self.offset_correction(sample)
    self.passthrough(t_s)

  def process_compass(self, t_s, sample):
    # Make sure you copy the sample (when you do this for real) so the reference is clean.
    self.have_received_compass = True
    self.compass = self.offset_correction(sample)
    self.passthrough(t_s)

  def process_accel(self, t_s, sample):
    # Make sure you copy the sample (when you do this for real) so the reference is clean.
    self.have_received_accel = True
    self.accel = self.offset_correction(sample)
    self.passthrough(t_s)

  def update(self, w_b, m_b, a_b):
    # Ideally the synchronizer that replaces passthrough() guarantees a fixed tick, e.g. 10ms.
    dt = self.t_s - self.t_previous_s
    self.t_previous_s = self.t_s

    # Estimate our orientation and rate of change of orientation
    a_norm = vector_norm(a_b)
    if a_norm > 1E-9:
      a_hat = a_b / vector_norm(a_b)
    else:
      a_hat = np.array([0.0, 0.0, 1.0])
    b = None
    m = None
    if self.m is not None:
      # Without Magnetic Distortion Compensation
      b = self.m
      m = m_b
    else:
      # With Magnetic Distortion Compensation
      m = m_b
      b = quaternion_rotation(qv=[0,m], qr=self.q)[1]
      b = np.asarray([np.sqrt(b[0]**2 + b[1]**2), 0, b[2]])

    grad_f = gradient_f(self.q, a_hat, b, m)

    if vector_norm(grad_f) > 1E-9:
      qe_dot = grad_f / vector_norm(grad_f)
      new_part = self.beta * qe_dot
    else:
      qe_dot = np.asarray([0,0,0,0])
      new_part = [0,0,0,0]
    qe_dot = [qe_dot[0], np.asarray([qe_dot[1], qe_dot[2], qe_dot[3]])]

    w_e = quaternion_times_scalar(scalar=2, quaternion=quaternion_product(quaternion_inverse(self.q), qe_dot, False))[1]
    self.int_we += w_e*dt

    q_dot = quaternion_times_scalar(scalar=.5, quaternion=quaternion_product(self.q, [0, w_b - self.zeta*self.int_we], False))

    dq = [new_part[0], np.array([new_part[1], new_part[2], new_part[3]])]
    dq = [q_dot[0] - dq[0], q_dot[1] - dq[1]]
    self.ddt_q = dq
    dq = [dq[0]*dt, dq[1]*dt]

    q = [self.q[0] + (self.ddt_q[0]*dt), self.q[1] + (self.ddt_q[1] * dt)]
    self.q = [e / quaternion_norm(q)  for e in q]

    # Estimate our position and velocity. Bear in mind we currently have no
    # positional estimate whatsoever, so our goal here is to use heuristics here
    # to keep drift reasonable. We have no expectation of accuracy. The first
    # controller goal is attitude stabilization.

    d2dt2_r = quaternion_rotation(qv=[0, a_b], qr=self.q)[1]
    d2dt2_r += np.asarray([0,0,-9.8])
    self.r += self.ddt_r*dt
    self.ddt_r += d2dt2_r*dt

    # Tell the controller we have an updated state estimate.
    if self.controller is not None:
      w_eff = quaternion_times_scalar(scalar=2, quaternion=quaternion_product(quaternion_inverse(self.q), self.ddt_q, False))[1]
      self.controller.process_state(self.t_s, self.q, w_eff, self.r, self.ddt_r)

# This test passed on 8/29/2018. This means given perfect samples (time, accuracy) from the IMU frame, this Estimator is the equivalent of that in rotation/madgwick_complementary_filter/state_estimation.py.
# The only reasons we might see differences in output are:
#  In that script, we treated the body as though it were held by a string. There was always a gravity vector, there was no concept of "measuring proper aceleration"
#  In that script, for the same reason, we used magnetic distortion compensation, as the acceleration was a stronger attitude source.
#  In that script, we had no time jitter or synchronization delay.
#  In that script, we weighted Beta and Zeta so they dominated the estimate (as opposed to letting the gyro win in the short term)
def estimator_test():
  # To generate "io" add this to the end of the for loop in rotation/madgwick_complementary_filter/state_estimation.py's simulate.
  # print "[%f, np.array([%f, %f, %f]), np.array([%f, %f, %f]), np.array([%f, %f, %f]), [%f, np.array([%f, %f, %f])]]," % (
  #   sensor_stream["t_s"][idx+1],
  #   sensor_stream["m_b"][idx][0],
  #   sensor_stream["m_b"][idx][1],
  #   sensor_stream["m_b"][idx][2],
  #   sensor_stream["a_b"][idx][0],
  #   sensor_stream["a_b"][idx][1],
  #   sensor_stream["a_b"][idx][2],
  #   sensor_stream["w_b"][idx][0],
  #   sensor_stream["w_b"][idx][1],
  #   sensor_stream["w_b"][idx][2],
  #   r_i[-1][0],
  #   r_i[-1][1][0],
  #   r_i[-1][1][1],
  #   r_i[-1][1][2]
  # )
  io = [
    [0.010033, np.array([-0.276123, -0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.997786, np.array([-0.046294, 0.015715, 0.045084])]],
    [0.020067, np.array([-0.292468, -0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.991156, np.array([-0.090989, 0.031551, 0.091297])]],
    [0.030100, np.array([-0.313857, -0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.980143, np.array([-0.133869, 0.047319, 0.138421])]],
    [0.040134, np.array([-0.339955, -0.318712, 0.884790]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.964799, np.array([-0.174731, 0.062841, 0.186233])]],
    [0.050167, np.array([-0.370348, -0.364484, 0.854396]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.945198, np.array([-0.213382, 0.077950, 0.234504])]],
    [0.060201, np.array([-0.404559, -0.404508, 0.820186]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.921432, np.array([-0.249636, 0.092483, 0.283004])]],
    [0.070234, np.array([-0.442047, -0.438153, 0.782698]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.893615, np.array([-0.283315, 0.106269, 0.331499])]],
    [0.080268, np.array([-0.482221, -0.464888, 0.742524]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.861883, np.array([-0.314253, 0.119128, 0.379751])]],
    [0.090301, np.array([-0.524447, -0.484292, 0.700298]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.826396, np.array([-0.342297, 0.130862, 0.427524])]],
    [0.100334, np.array([-0.568060, -0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.787344, np.array([-0.367308, 0.141246, 0.474578])]],
    [0.110368, np.array([-0.612372, -0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.744941, np.array([-0.389182, 0.150026, 0.520665])]],
    [0.120401, np.array([-0.656684, -0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.699431, np.array([-0.407860, 0.156932, 0.565525])]],
    [0.130435, np.array([-0.700298, -0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.651078, np.array([-0.423347, 0.161705, 0.608873])]],
    [0.140468, np.array([-0.742524, -0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.600162, np.array([-0.435708, 0.164119, 0.650407])]],
    [0.150502, np.array([-0.782698, -0.438153, 0.442047]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.546968, np.array([-0.445057, 0.164006, 0.689821])]],
    [0.160535, np.array([-0.820186, -0.404508, 0.404559]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.491783, np.array([-0.451535, 0.161257, 0.726816])]],
    [0.170569, np.array([-0.854396, -0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.434891, np.array([-0.455296, 0.155818, 0.761116])]],
    [0.180602, np.array([-0.884790, -0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.376565, np.array([-0.456492, 0.147684, 0.792466])]],
    [0.190635, np.array([-0.910887, -0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.317073, np.array([-0.455273, 0.136883, 0.820642])]],
    [0.200669, np.array([-0.932277, -0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.256670, np.array([-0.451779, 0.123460, 0.845443])]],
    [0.210702, np.array([-0.948622, -0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.195600, np.array([-0.446145, 0.107469, 0.866687])]],
    [0.220736, np.array([-0.959663, -0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.134088, np.array([-0.438508, 0.088957, 0.884204])]],
    [0.230769, np.array([-0.965228, -0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.072329, np.array([-0.429017, 0.067958, 0.897828])]],
    [0.240803, np.array([-0.965228, 0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.010461, np.array([-0.417847, 0.044480, 0.907368])]],
    [0.250836, np.array([-0.959663, 0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.051488, np.array([-0.405233, 0.018498, 0.912575])]],
    [0.260870, np.array([-0.948622, 0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.113717, np.array([-0.391553, -0.010053, 0.913046])]],
    [0.270903, np.array([-0.932277, 0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.176891, np.array([-0.377573, -0.041186, 0.907993])]],
    [0.280936, np.array([-0.910887, 0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.242189, np.array([-0.364991, -0.074228, 0.895889])]],
    [0.290970, np.array([-0.884790, 0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.308993, np.array([-0.355155, -0.106833, 0.875771])]],
    [0.301003, np.array([-0.854396, 0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.374289, np.array([-0.344928, -0.138598, 0.849543])]],
    [0.311037, np.array([-0.820186, 0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.437582, np.array([-0.332555, -0.168933, 0.818163])]],
    [0.321070, np.array([-0.782698, 0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.497683, np.array([-0.319441, -0.199225, 0.781395])]],
    [0.331104, np.array([-0.742524, 0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.556703, np.array([-0.301905, -0.222520, 0.741229])]],
    [0.341137, np.array([-0.700298, 0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.598703, np.array([-0.293441, -0.251733, 0.701482])]],
    [0.351171, np.array([-0.656684, 0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.649145, np.array([-0.270051, -0.262787, 0.660777])]],
    [0.361204, np.array([-0.612372, 0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.685193, np.array([-0.259446, -0.288988, 0.616185])]],
    [0.371237, np.array([-0.568060, 0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.729119, np.array([-0.233194, -0.297803, 0.570369])]],
    [0.381271, np.array([-0.524447, 0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.759270, np.array([-0.222046, -0.320046, 0.521320])]],
    [0.391304, np.array([-0.482221, 0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.796132, np.array([-0.192761, -0.326783, 0.471413])]],
    [0.401338, np.array([-0.442047, 0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.820097, np.array([-0.181345, -0.345224, 0.418778])]],
    [0.411371, np.array([-0.404559, 0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.849516, np.array([-0.149272, -0.349775, 0.365648])]],
    [0.421405, np.array([-0.370348, 0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.867163, np.array([-0.138246, -0.364315, 0.310146])]],
    [0.431438, np.array([-0.339955, 0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.888756, np.array([-0.103576, -0.366743, 0.254726])]],
    [0.441472, np.array([-0.313857, 0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.900062, np.array([-0.093512, -0.377207, 0.197127])]],
    [0.451505, np.array([-0.292468, 0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.913491, np.array([-0.056597, -0.377671, 0.140342])]],
    [0.461538, np.array([-0.276123, 0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.918629, np.array([-0.047836, -0.383642, 0.081558])]],
    [0.471572, np.array([-0.265081, 0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.923607, np.array([-0.009306, -0.382457, 0.024308])]],
    [0.481605, np.array([-0.259517, 0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.922974, np.array([-0.001481, -0.383321, -0.034385])]],
    [0.491639, np.array([-0.259517, -0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.919317, np.array([0.037586, -0.380933, -0.091290])]],
    [0.501672, np.array([-0.265081, -0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.913500, np.array([0.046115, -0.376290, -0.147635])]],
    [0.511706, np.array([-0.276123, -0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.901208, np.array([0.084245, -0.373212, -0.203570])]],
    [0.521739, np.array([-0.292468, -0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.888811, np.array([0.092842, -0.366515, -0.258963])]],
    [0.531773, np.array([-0.313857, -0.267913, 0.910887]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.868844, np.array([0.129415, -0.360976, -0.313144])]],
    [0.541806, np.array([-0.339955, -0.318712, 0.884790]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.851989, np.array([0.153251, -0.340256, -0.367226])]],
    [0.551839, np.array([-0.370348, -0.364484, 0.854396]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.821442, np.array([0.176711, -0.341998, -0.420765])]],
    [0.561873, np.array([-0.404559, -0.404508, 0.820186]), np.array([-0.707107, -0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.796440, np.array([0.186600, -0.325699, -0.474113])]],
    [0.571906, np.array([-0.442047, -0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.761393, np.array([0.217826, -0.317327, -0.521666])]],
    [0.581940, np.array([-0.482221, -0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.730839, np.array([0.227732, -0.297625, -0.570466])]],
    [0.591973, np.array([-0.524447, -0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.689237, np.array([0.256025, -0.287861, -0.613629])]],
    [0.602007, np.array([-0.568060, -0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.653448, np.array([0.265009, -0.265351, -0.657545])]],
    [0.612040, np.array([-0.612372, -0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.606006, np.array([0.290404, -0.254223, -0.695552])]],
    [0.622074, np.array([-0.656684, -0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.565624, np.array([0.297972, -0.229073, -0.734035])]],
    [0.632107, np.array([-0.700298, -0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.513045, np.array([0.320371, -0.216911, -0.766222])]],
    [0.642140, np.array([-0.742524, -0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.468837, np.array([0.326107, -0.189353, -0.798744])]],
    [0.652174, np.array([-0.782698, -0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.411896, np.array([0.345377, -0.176600, -0.824542])]],
    [0.662207, np.array([-0.820186, -0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.364741, np.array([0.349008, -0.146843, -0.850643])]],
    [0.672241, np.array([-0.854396, -0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.304281, np.array([0.364911, -0.134106, -0.869637])]],
    [0.682274, np.array([-0.884790, -0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.255131, np.array([0.366329, -0.102338, -0.888953])]],
    [0.692308, np.array([-0.910887, -0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.192143, np.array([0.378383, -0.090456, -0.900958])]],
    [0.702341, np.array([-0.932277, -0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.141982, np.array([0.377729, -0.056841, -0.913198])]],
    [0.712375, np.array([-0.948622, -0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.078474, np.array([0.384587, -0.047230, -0.918534])]],
    [0.722408, np.array([-0.959663, -0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.028242, np.array([0.382585, -0.011892, -0.923412])]],
    [0.732441, np.array([-0.965228, -0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.020042, np.array([0.380675, 0.022752, -0.924212])]],
    [0.742475, np.array([-0.965228, 0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.088653, np.array([0.380852, 0.033999, -0.919748])]],
    [0.752508, np.array([-0.959663, 0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.137684, np.array([0.379040, 0.069785, -0.912415])]],
    [0.762542, np.array([-0.948622, 0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.205171, np.array([0.373435, 0.080994, -0.901050])]],
    [0.772575, np.array([-0.932277, 0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.252829, np.array([0.369006, 0.115656, -0.886869])]],
    [0.782609, np.array([-0.910887, 0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.317838, np.array([0.359158, 0.126864, -0.868268])]],
    [0.792642, np.array([-0.884790, 0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.363823, np.array([0.353716, 0.159498, -0.846805])]],
    [0.802676, np.array([-0.854396, 0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.425129, np.array([0.339260, 0.170773, -0.821586])]],
    [0.812709, np.array([-0.820186, 0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.468698, np.array([0.332300, 0.201115, -0.793380])]],
    [0.822742, np.array([-0.782698, 0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.525421, np.array([0.313757, 0.212071, -0.761916])]],
    [0.832776, np.array([-0.742524, 0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.565790, np.array([0.305438, 0.239822, -0.727375])]],
    [0.842809, np.array([-0.700298, 0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.617171, np.array([0.283119, 0.250064, -0.690225])]],
    [0.852843, np.array([-0.656684, 0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.653549, np.array([0.273654, 0.275030, -0.649881])]],
    [0.862876, np.array([-0.612372, 0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.698955, np.array([0.247887, 0.284142, -0.607682])]],
    [0.872910, np.array([-0.568060, 0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.730615, np.array([0.237588, 0.306161, -0.562156])]],
    [0.882943, np.array([-0.524447, 0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.769518, np.array([0.208712, 0.313754, -0.515596])]],
    [0.892977, np.array([-0.482221, 0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.795840, np.array([0.197961, 0.332678, -0.465591])]],
    [0.903010, np.array([-0.442047, 0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.827794, np.array([0.166308, 0.338439, -0.415399])]],
    [0.913043, np.array([-0.404559, 0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.848295, np.array([0.155546, 0.354105, -0.361678])]],
    [0.923077, np.array([-0.370348, 0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.872899, np.array([0.121416, 0.357844, -0.308633])]],
    [0.933110, np.array([-0.339955, 0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.887262, np.array([0.111115, 0.370023, -0.251998])]],
    [0.943144, np.array([-0.313857, 0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.904133, np.array([0.074812, 0.371695, -0.196952])]],
    [0.953177, np.array([-0.292468, 0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.912236, np.array([0.065372, 0.380054, -0.138245])]],
    [0.963211, np.array([-0.276123, 0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.921024, np.array([0.027335, 0.379768, -0.082120])]],
    [0.973244, np.array([-0.265081, 0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.922926, np.array([0.018850, 0.383871, -0.022239])]],
    [0.983278, np.array([-0.259517, 0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.923373, np.array([-0.020166, 0.381860, 0.034034])]],
    [0.993311, np.array([-0.259517, -0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.919218, np.array([-0.028125, 0.381305, 0.094090])]],
    [1.003344, np.array([-0.265081, -0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.911254, np.array([-0.067015, 0.377800, 0.149639])]],
    [1.013378, np.array([-0.276123, -0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.901122, np.array([-0.075205, 0.372469, 0.208783])]],
    [1.023411, np.array([-0.292468, -0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.884932, np.array([-0.112805, 0.367568, 0.262801])]],
    [1.033445, np.array([-0.313857, -0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.868808, np.array([-0.121709, 0.357734, 0.319977])]],
    [1.043478, np.array([-0.339955, -0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.844792, np.array([-0.157164, 0.351397, 0.371679])]],
    [1.053512, np.array([-0.370348, -0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.822691, np.array([-0.166662, 0.337555, 0.425982])]],
    [1.063545, np.array([-0.404559, -0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.791367, np.array([-0.199520, 0.329711, 0.474574])]],
    [1.073579, np.array([-0.442047, -0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.763455, np.array([-0.209075, 0.312331, 0.525237])]],
    [1.083612, np.array([-0.482221, -0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.725402, np.array([-0.239140, 0.302977, 0.569920])]],
    [1.093645, np.array([-0.524447, -0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.692048, np.array([-0.248122, 0.282426, 0.616231])]],
    [1.103679, np.array([-0.568060, -0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.647886, np.array([-0.275286, 0.271688, 0.656237])]],
    [1.113712, np.array([-0.612372, -0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.609649, np.array([-0.283134, 0.248255, 0.697519])]],
    [1.123746, np.array([-0.656684, -0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.560036, np.array([-0.307292, 0.236398, 0.732152])]],
    [1.133779, np.array([-0.700298, -0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.517631, np.array([-0.313560, 0.210328, 0.767790])]],
    [1.143813, np.array([-0.742524, -0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.463268, np.array([-0.334562, 0.197754, 0.796458])]],
    [1.153846, np.array([-0.782698, -0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.417530, np.array([-0.338934, 0.169255, 0.825921])]],
    [1.163880, np.array([-0.820186, -0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.359147, np.array([-0.356536, 0.156503, 0.848176])]],
    [1.173913, np.array([-0.854396, -0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.311013, np.array([-0.358856, 0.125745, 0.871023])]],
    [1.183946, np.array([-0.884790, -0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.249370, np.array([-0.372642, 0.113479, 0.886609])]],
    [1.193980, np.array([-0.910887, -0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.199841, np.array([-0.372974, 0.080611, 0.902472])]],
    [1.204013, np.array([-0.932277, -0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.135852, np.array([-0.382233, 0.069527, 0.911377])]],
    [1.214047, np.array([-0.948622, -0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.085905, np.array([-0.380936, 0.034777, 0.919945])]],
    [1.224080, np.array([-0.959663, -0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.022138, np.array([-0.384711, 0.025659, 0.922415])]],
    [1.234114, np.array([-0.965228, -0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.027575, np.array([-0.382417, -0.010442, 0.923519])]],
    [1.244147, np.array([-0.965228, 0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.082004, np.array([-0.383000, -0.049103, 0.918790])]],
    [1.254181, np.array([-0.959663, 0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.149625, np.array([-0.378815, -0.060303, 0.911304])]],
    [1.264214, np.array([-0.948622, 0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.196660, np.array([-0.372604, -0.094875, 0.901936])]],
    [1.274247, np.array([-0.932277, 0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.262715, np.array([-0.366375, -0.105783, 0.886318])]],
    [1.284281, np.array([-0.910887, 0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.309215, np.array([-0.362790, -0.138708, 0.868061])]],
    [1.294314, np.array([-0.884790, 0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.372066, np.array([-0.350208, -0.150216, 0.846378])]],
    [1.304348, np.array([-0.854396, 0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.416481, np.array([-0.343865, -0.181730, 0.821751])]],
    [1.314381, np.array([-0.820186, 0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.475422, np.array([-0.327575, -0.192871, 0.793391])]],
    [1.324415, np.array([-0.782698, 0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.517196, np.array([-0.320001, -0.221866, 0.762157])]],
    [1.334448, np.array([-0.742524, 0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.571290, np.array([-0.299823, -0.232494, 0.727792])]],
    [1.344482, np.array([-0.700298, 0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.609523, np.array([-0.290903, -0.258865, 0.690540])]],
    [1.354515, np.array([-0.656684, 0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.658098, np.array([-0.267218, -0.268507, 0.650697])]],
    [1.364548, np.array([-0.612372, 0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.692014, np.array([-0.257231, -0.292055, 0.607991])]],
    [1.374582, np.array([-0.568060, 0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.734457, np.array([-0.230307, -0.300320, 0.563329])]],
    [1.384615, np.array([-0.524447, 0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.763375, np.array([-0.219615, -0.320871, 0.515819])]],
    [1.394649, np.array([-0.482221, 0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.799147, np.array([-0.189703, -0.327433, 0.467080])]],
    [1.404682, np.array([-0.442047, 0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.822518, np.array([-0.178758, -0.344800, 0.415480])]],
    [1.414716, np.array([-0.404559, 0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.851138, np.array([-0.146098, -0.349433, 0.363478])]],
    [1.424749, np.array([-0.370348, 0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.868569, np.array([-0.135405, -0.363388, 0.308550])]],
    [1.434783, np.array([-0.339955, 0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.889606, np.array([-0.100253, -0.365993, 0.254165])]],
    [1.444816, np.array([-0.313857, 0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.900888, np.array([-0.090286, -0.376237, 0.196711])]],
    [1.454849, np.array([-0.292468, 0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.913958, np.array([-0.053002, -0.376866, 0.140865])]],
    [1.464883, np.array([-0.276123, 0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.919069, np.array([-0.044018, -0.383006, 0.081737])]],
    [1.474916, np.array([-0.265081, 0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.923858, np.array([-0.005229, -0.381858, 0.025357])]],
    [1.484950, np.array([-0.259517, 0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.922901, np.array([0.002980, -0.383477, -0.034513])]],
    [1.494983, np.array([-0.259517, -0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.919242, np.array([0.042252, -0.380802, -0.090551])]],
    [1.505017, np.array([-0.265081, -0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.912303, np.array([0.050362, -0.377665, -0.150119])]],
    [1.515050, np.array([-0.276123, -0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.900272, np.array([0.088866, -0.373607, -0.205016])]],
    [1.525084, np.array([-0.292468, -0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.887340, np.array([0.097527, -0.365843, -0.263203])]],
    [1.535117, np.array([-0.313857, -0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.867259, np.array([0.134199, -0.360378, -0.316196])]],
    [1.545151, np.array([-0.339955, -0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.848306, np.array([0.143542, -0.348399, -0.372010])]],
    [1.555184, np.array([-0.370348, -0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.820652, np.array([0.177749, -0.341430, -0.422329])]],
    [1.565217, np.array([-0.404559, -0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.795773, np.array([0.187405, -0.325699, -0.474915])]],
    [1.575251, np.array([-0.442047, -0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.761088, np.array([0.218847, -0.317180, -0.521774])]],
    [1.585284, np.array([-0.482221, -0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.730574, np.array([0.228240, -0.298079, -0.570366])]],
    [1.595318, np.array([-0.524447, -0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.689429, np.array([0.256772, -0.288080, -0.612997])]],
    [1.605351, np.array([-0.568060, -0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.653764, np.array([0.265332, -0.265908, -0.656875])]],
    [1.615385, np.array([-0.612372, -0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.606762, np.array([0.290834, -0.254632, -0.694563])]],
    [1.625418, np.array([-0.656684, -0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.566598, np.array([0.298084, -0.229638, -0.733061])]],
    [1.635452, np.array([-0.700298, -0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.514369, np.array([0.320414, -0.217410, -0.765175])]],
    [1.645485, np.array([-0.742524, -0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.470497, np.array([0.325993, -0.189809, -0.797705])]],
    [1.655518, np.array([-0.782698, -0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.413694, np.array([0.344957, -0.177053, -0.823720])]],
    [1.665552, np.array([-0.820186, -0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.367015, np.array([0.348640, -0.147039, -0.849782])]],
    [1.675585, np.array([-0.854396, -0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.306314, np.array([0.363965, -0.134244, -0.869298])]],
    [1.685619, np.array([-0.884790, -0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.257798, np.array([0.365688, -0.102015, -0.888485])]],
    [1.695652, np.array([-0.910887, -0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.193927, np.array([0.376992, -0.089659, -0.901238])]],
    [1.705686, np.array([-0.932277, -0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.144545, np.array([0.376878, -0.055496, -0.913230])]],
    [1.715719, np.array([-0.948622, -0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.078374, np.array([0.383675, -0.043887, -0.919089])]],
    [1.725753, np.array([-0.959663, -0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.028963, np.array([0.382020, -0.008299, -0.923663])]],
    [1.735786, np.array([-0.965228, -0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.038333, np.array([0.383817, 0.002618, -0.922610])]],
    [1.745819, np.array([-0.965228, 0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.087200, np.array([0.380963, 0.038763, -0.919652])]],
    [1.755853, np.array([-0.959663, 0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.154082, np.array([0.377451, 0.049379, -0.911785])]],
    [1.765886, np.array([-0.948622, 0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.202053, np.array([0.373609, 0.084978, -0.901316])]],
    [1.775920, np.array([-0.932277, 0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.266629, np.array([0.364699, 0.095614, -0.886996])]],
    [1.785953, np.array([-0.910887, 0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.313355, np.array([0.359951, 0.129664, -0.869156])]],
    [1.795987, np.array([-0.884790, 0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.358732, np.array([0.356463, 0.160752, -0.847587])]],
    [1.806020, np.array([-0.854396, 0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.419732, np.array([0.341694, 0.172792, -0.822930])]],
    [1.816054, np.array([-0.820186, 0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.463714, np.array([0.324736, 0.206005, -0.798171])]],
    [1.826087, np.array([-0.782698, 0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.521141, np.array([0.313367, 0.214716, -0.764271])]],
    [1.836120, np.array([-0.742524, 0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.562870, np.array([0.308788, 0.239394, -0.728366])]],
    [1.846154, np.array([-0.700298, 0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.613910, np.array([0.285645, 0.250859, -0.691802])]],
    [1.856187, np.array([-0.656684, 0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.649848, np.array([0.275304, 0.276725, -0.652172])]],
    [1.866221, np.array([-0.612372, 0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.695704, np.array([0.250575, 0.285571, -0.609637])]],
    [1.876254, np.array([-0.568060, 0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.727275, np.array([0.240423, 0.307598, -0.564492])]],
    [1.886288, np.array([-0.524447, 0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.766639, np.array([0.212207, 0.315141, -0.517608])]],
    [1.896321, np.array([-0.482221, 0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.792872, np.array([0.201373, 0.334165, -0.468119])]],
    [1.906355, np.array([-0.442047, 0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.825361, np.array([0.170306, 0.339798, -0.417508])]],
    [1.916388, np.array([-0.404559, 0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.845878, np.array([0.159508, 0.355424, -0.364309])]],
    [1.926421, np.array([-0.370348, 0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.870990, np.array([0.125711, 0.359074, -0.310869])]],
    [1.936455, np.array([-0.339955, 0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.885493, np.array([0.115426, 0.371066, -0.254735])]],
    [1.946488, np.array([-0.313857, 0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.902803, np.array([0.079179, 0.372724, -0.199385])]],
    [1.956522, np.array([-0.292468, 0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.911188, np.array([0.069790, 0.380724, -0.141125])]],
    [1.966555, np.array([-0.276123, 0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.920323, np.array([0.031575, 0.380548, -0.084805])]],
    [1.976589, np.array([-0.265081, 0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.922638, np.array([0.023079, 0.384144, -0.025303])]],
    [1.986622, np.array([-0.259517, 0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.923337, np.array([-0.016226, 0.382387, 0.031086])]],
    [1.996656, np.array([-0.259517, -0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.919671, np.array([-0.024354, 0.381264, 0.090833])]],
    [2.006689, np.array([-0.265081, -0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.911886, np.array([-0.063497, 0.378124, 0.146472])]],
    [2.016722, np.array([-0.276123, -0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.902243, np.array([-0.071994, 0.372280, 0.205383])]],
    [2.026756, np.array([-0.292468, -0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.886200, np.array([-0.109727, 0.367779, 0.259517])]],
    [2.036789, np.array([-0.313857, -0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.870519, np.array([-0.118957, 0.357552, 0.316547])]],
    [2.046823, np.array([-0.339955, -0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.846645, np.array([-0.154432, 0.351577, 0.368425])]],
    [2.056856, np.array([-0.370348, -0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.824941, np.array([-0.164193, 0.337435, 0.422671])]],
    [2.066890, np.array([-0.404559, -0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.793756, np.array([-0.196989, 0.329879, 0.471516])]],
    [2.076923, np.array([-0.442047, -0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.766222, np.array([-0.206761, 0.312216, 0.522183])]],
    [2.086957, np.array([-0.482221, -0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.728277, np.array([-0.236689, 0.303084, 0.567214])]],
    [2.096990, np.array([-0.524447, -0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.695313, np.array([-0.245896, 0.282208, 0.613542])]],
    [2.107023, np.array([-0.568060, -0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.651180, np.array([-0.272834, 0.271644, 0.654015])]],
    [2.117057, np.array([-0.612372, -0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.613372, np.array([-0.280966, 0.247813, 0.695286])]],
    [2.127090, np.array([-0.656684, -0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.563650, np.array([-0.304786, 0.236086, 0.730525])]],
    [2.137124, np.array([-0.700298, -0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.521732, np.array([-0.311439, 0.209526, 0.766094])]],
    [2.147157, np.array([-0.742524, -0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.467048, np.array([-0.331975, 0.197008, 0.795516])]],
    [2.157191, np.array([-0.782698, -0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.421877, np.array([-0.336864, 0.167922, 0.824830])]],
    [2.167224, np.array([-0.820186, -0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.362886, np.array([-0.353894, 0.155062, 0.847956])]],
    [2.177258, np.array([-0.854396, -0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.315406, np.array([-0.356874, 0.123650, 0.870558])]],
    [2.187291, np.array([-0.884790, -0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.252806, np.array([-0.370097, 0.110917, 0.887026])]],
    [2.197324, np.array([-0.910887, -0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.203992, np.array([-0.371190, 0.077430, 0.902557])]],
    [2.207358, np.array([-0.932277, -0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.138585, np.array([-0.380209, 0.065212, 0.912131])]],
    [2.217391, np.array([-0.948622, -0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.089347, np.array([-0.379611, 0.030059, 0.920331])]],
    [2.227425, np.array([-0.959663, -0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.022153, np.array([-0.383973, 0.018489, 0.922893])]],
    [2.237458, np.array([-0.965228, -0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.026812, np.array([-0.381991, -0.017619, 0.923609])]],
    [2.247492, np.array([-0.965228, 0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.094459, np.array([-0.381337, -0.028770, 0.919147])]],
    [2.257525, np.array([-0.959663, 0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.142708, np.array([-0.378215, -0.064810, 0.912353])]],
    [2.267559, np.array([-0.948622, 0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.209285, np.array([-0.372479, -0.075958, 0.900938])]],
    [2.277592, np.array([-0.932277, 0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.256458, np.array([-0.368255, -0.110867, 0.886750])]],
    [2.287625, np.array([-0.910887, 0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.320555, np.array([-0.357687, -0.122242, 0.868540])]],
    [2.297659, np.array([-0.884790, 0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.366139, np.array([-0.352248, -0.155236, 0.847210])]],
    [2.307692, np.array([-0.854396, 0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.426633, np.array([-0.337266, -0.166714, 0.822461])]],
    [2.317726, np.array([-0.820186, 0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.469912, np.array([-0.330506, -0.197340, 0.794359])]],
    [2.327759, np.array([-0.782698, 0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.525944, np.array([-0.311555, -0.208533, 0.763433])]],
    [2.337793, np.array([-0.742524, 0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.566101, np.array([-0.303476, -0.236548, 0.729025])]],
    [2.347826, np.array([-0.700298, 0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.616984, np.array([-0.280962, -0.246971, 0.692384])]],
    [2.357860, np.array([-0.656684, 0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.653206, np.array([-0.271690, -0.272227, 0.652226])]],
    [2.367893, np.array([-0.612372, 0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.698349, np.array([-0.245950, -0.281427, 0.610422])]],
    [2.377926, np.array([-0.568060, 0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.729900, np.array([-0.235740, -0.303794, 0.565139])]],
    [2.387960, np.array([-0.524447, 0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.768762, np.array([-0.207040, -0.311407, 0.518812])]],
    [2.397993, np.array([-0.482221, 0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.795022, np.array([-0.196264, -0.330730, 0.469083])]],
    [2.408027, np.array([-0.442047, 0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.827089, np.array([-0.164820, -0.336480, 0.418974])]],
    [2.418060, np.array([-0.404559, 0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.847579, np.array([-0.153944, -0.352563, 0.365528])]],
    [2.428094, np.array([-0.370348, 0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.872369, np.array([-0.119950, -0.356274, 0.312495])]],
    [2.438127, np.array([-0.339955, 0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.886775, np.array([-0.109470, -0.368864, 0.256096])]],
    [2.448161, np.array([-0.313857, 0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.903849, np.array([-0.073174, -0.370499, 0.201079])]],
    [2.458194, np.array([-0.292468, 0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.912037, np.array([-0.063492, -0.379266, 0.142532])]],
    [2.468227, np.array([-0.276123, 0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.921020, np.array([-0.025330, -0.378944, 0.086500])]],
    [2.478261, np.array([-0.265081, 0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.923008, np.array([-0.016544, -0.383499, 0.026672])]],
    [2.488294, np.array([-0.259517, 0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.923641, np.array([0.022693, -0.381452, -0.029436])]],
    [2.498328, np.array([-0.259517, -0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.919510, np.array([0.030941, -0.381470, -0.089584])]],
    [2.508361, np.array([-0.265081, -0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.911746, np.array([0.070098, -0.377900, -0.144906])]],
    [2.518395, np.array([-0.276123, -0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.901524, np.array([0.078406, -0.373305, -0.204328])]],
    [2.528428, np.array([-0.292468, -0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.885580, np.array([0.116293, -0.368269, -0.258074])]],
    [2.538462, np.array([-0.313857, -0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.869257, np.array([0.125014, -0.359282, -0.315722])]],
    [2.548495, np.array([-0.339955, -0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.845554, np.array([0.160779, -0.352717, -0.367123])]],
    [2.558528, np.array([-0.370348, -0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.823198, np.array([0.169811, -0.339713, -0.422025])]],
    [2.568562, np.array([-0.404559, -0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.792253, np.array([0.202988, -0.331572, -0.470309])]],
    [2.578595, np.array([-0.442047, -0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.764099, np.array([0.211925, -0.314930, -0.521594])]],
    [2.588629, np.array([-0.482221, -0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.726468, np.array([0.242271, -0.305269, -0.566004])]],
    [2.598662, np.array([-0.524447, -0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.692934, np.array([0.250611, -0.285314, -0.612888])]],
    [2.608696, np.array([-0.568060, -0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.649191, np.array([0.277957, -0.274317, -0.652718])]],
    [2.618729, np.array([-0.612372, -0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.610866, np.array([0.285228, -0.251313, -0.694500])]],
    [2.628763, np.array([-0.656684, -0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.561599, np.array([0.309399, -0.239286, -0.729123])]],
    [2.638796, np.array([-0.700298, -0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.519216, np.array([0.315218, -0.213446, -0.765176])]],
    [2.648829, np.array([-0.742524, -0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.465021, np.array([0.335994, -0.200787, -0.794070])]],
    [2.658863, np.array([-0.782698, -0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.419440, np.array([0.340100, -0.172283, -0.823845])]],
    [2.668896, np.array([-0.820186, -0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.360916, np.array([0.357212, -0.159425, -0.846595])]],
    [2.678930, np.array([-0.854396, -0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.313096, np.array([0.359490, -0.128425, -0.869623])]],
    [2.688963, np.array([-0.884790, -0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.250876, np.array([0.372635, -0.115756, -0.885892])]],
    [2.698997, np.array([-0.910887, -0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.201803, np.array([0.373117, -0.082506, -0.901805])]],
    [2.709030, np.array([-0.932277, -0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.136642, np.array([0.381930, -0.070335, -0.911324])]],
    [2.719064, np.array([-0.948622, -0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.087228, np.array([0.380814, -0.035261, -0.919853])]],
    [2.729097, np.array([-0.959663, -0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [-0.020182, np.array([0.384885, -0.023710, -0.922439])]],
    [2.739130, np.array([-0.965228, -0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.028881, np.array([0.382469, 0.012447, -0.923433])]],
    [2.749164, np.array([-0.965228, 0.031395, 0.259517]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.096363, np.array([0.381301, 0.023541, -0.919113])]],
    [2.759197, np.array([-0.959663, 0.093691, 0.265081]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.144647, np.array([0.377918, 0.059728, -0.912517])]],
    [2.769231, np.array([-0.948622, 0.154508, 0.276123]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.192679, np.array([0.377053, 0.094707, -0.900964])]],
    [2.779264, np.array([-0.932277, 0.212890, 0.292468]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.258224, np.array([0.368496, 0.106623, -0.886658])]],
    [2.789298, np.array([-0.910887, 0.267913, 0.313857]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.311003, np.array([0.349291, 0.134229, -0.873645])]],
    [2.799331, np.array([-0.884790, 0.318712, 0.339955]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.367260, np.array([0.352790, 0.151493, -0.847178])]],
    [2.809365, np.array([-0.854396, 0.364484, 0.370348]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.419028, np.array([0.330225, 0.177099, -0.827045])]],
    [2.819398, np.array([-0.820186, 0.404508, 0.404559]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.468853, np.array([0.331500, 0.196885, -0.794683])]],
    [2.829431, np.array([-0.782698, 0.438153, 0.442047]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.524693, np.array([0.311492, 0.209251, -0.764123])]],
    [2.839465, np.array([-0.742524, 0.464888, 0.482221]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.564962, np.array([0.303843, 0.237008, -0.729606])]],
    [2.849498, np.array([-0.700298, 0.484292, 0.524447]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.616252, np.array([0.281955, 0.247222, -0.692543])]],
    [2.859532, np.array([-0.656684, 0.496057, 0.568060]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.652391, np.array([0.272464, 0.272633, -0.652549])]],
    [2.869565, np.array([-0.612372, 0.500000, 0.612372]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.697709, np.array([0.246763, 0.282038, -0.610545])]],
    [2.879599, np.array([-0.568060, 0.496057, 0.656684]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.729243, np.array([0.236554, 0.304356, -0.565344])]],
    [2.889632, np.array([-0.524447, 0.484292, 0.700298]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.768297, np.array([0.208034, 0.311952, -0.518775])]],
    [2.899666, np.array([-0.482221, 0.464888, 0.742524]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.794527, np.array([0.197196, 0.331251, -0.469162])]],
    [2.909699, np.array([-0.442047, 0.438153, 0.782698]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.826706, np.array([0.165799, 0.337021, -0.418909])]],
    [2.919732, np.array([-0.404559, 0.404508, 0.820186]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.847197, np.array([0.154908, 0.353019, -0.365567])]],
    [2.929766, np.array([-0.370348, 0.364484, 0.854396]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.872072, np.array([0.120930, 0.356712, -0.312447])]],
    [2.939799, np.array([-0.339955, 0.318712, 0.884790]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.886499, np.array([0.110440, 0.369199, -0.256153])]],
    [2.949833, np.array([-0.313857, 0.267913, 0.910887]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.903632, np.array([0.074106, 0.370833, -0.201097])]],
    [2.959866, np.array([-0.292468, 0.212890, 0.932277]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.911866, np.array([0.064421, 0.379474, -0.142649])]],
    [2.969900, np.array([-0.276123, 0.154508, 0.948622]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.920892, np.array([0.026190, 0.379173, -0.086603])]],
    [2.979933, np.array([-0.265081, 0.093691, 0.959663]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.922947, np.array([0.017391, 0.383593, -0.026866])]],
    [2.989967, np.array([-0.259517, 0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.923607, np.array([-0.021920, 0.381595, 0.029247])]],
    [3.000000, np.array([-0.259517, -0.031395, 0.965228]), np.array([-0.707107, 0.000000, 0.707107]), np.array([-8.885766, 0.000000, 8.885766]), [0.919557, np.array([-0.030201, 0.381480, 0.089313])]]
  ]
  uut = Estimator()

  est = []
  gt = []
  for t_s, m_b, a_b, w_b, q in io:
    uut.process_gyro(t_s, np.asarray(w_b))
    uut.process_compass(t_s, np.asarray(m_b))
    uut.process_accel(t_s, np.asarray(a_b))
    est.append(copy.deepcopy(uut.q))
    gt.append(q)

  e0_act, e1_act, e2_act = generate_body_frames(gt)
  e0_est, e1_est, e2_est = generate_body_frames(est)

  compare(len(est), e0_est, e1_est, e2_est, e0_act, e1_act, e2_act, 1, "images")

if __name__ == "__main__":
  estimator_test()

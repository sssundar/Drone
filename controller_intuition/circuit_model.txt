We're going to model the motor as an RL in series with an EMF.
We'll drive it with an NMOS half-bridge with Schottky flyback diodes.
For now we'll focus on ideal voltage sources and ignore the need for reverse-current protection (across rails) & LPF (across motor terminals) caps.

The mechanical motor will be represented by an R || C circuit driven by a current-controlled voltage source.

The current will depend on the current through a motor EMF voltage source, and will represent torque.
Capacitance will represent the mechanical moment of inertia. Resistance will represent drag.
Voltage will represent rotor frequency.

The motor EMF will be proportional to the voltage representing the rotor frequency.

Using our parameters picked to give us reasonable ramp-up and ramp-down times in nonideal_bicopter_pid.py:

Vcc = 7.4
Rm = 2
Lm = 0.005 (for a 2.5 ms electrical time constant)
w_max=40*pi, f_max=0.06*9.8, ku=0.00007, km'=0.00015, J=0.000005

C = J = 0.000005 -> Vw is voltage across this
R = 1/ku = 14286 -> this is drag

T = (ku+km')*w_max = (0.00007 + 0.00015)*40*pi = 0.0276 -> what we chose in the python script
ke = T * (Rm/Vcc) = T * (2/7.4) = 0.0276 * 2 / 7.4 = 0.00748 -> ke * Iintomotor = Itorque
km = Vcc km' / T = 7.4 * 0.00015 / 0.0276 = 0.0402 -> km * Vw = motor EMF

Drone: 
  I don't really know what I'm doing. All I remember from school is you should have a sense for what your circuit should do before you build it, so you know what to measure to see if you built it wrong (or learn something new...). 

  So what am I trying to accomplish? I want to find a motor drive circuit and have some sense of what currents, voltages I expect in the system so I can pick parts which will hold up. I want to have a measurement plan before I build my circuit.

1. Simulate motor drive in LTSpice. Currently, testing subcircuits. E.g. RL timescale.. should be fast. Why are currents getting to 20A? This means our motor coefficients are wrong, they aren't rising high enough? Why does current stay in the drive direction for so long? Is L too high? L/R here is 0.05/0.1 = 0.5 seconds... about what we see. Something about this circuit is just... weird. I need to look up real motor parameters to understand whether my electrical numbers are off. My measurements with a single transistor (no current path, just shottky) for my hobby motors showed microsecond L/R constants... and mH inductors are large, no? Very tightly wound?

Ha! I forgot ke in my model depends on the R of the motor winding. All is well now. Looks like I've been simulating a 100ms mechanical time constant system. I should go check my python scripts to be sure, and see what asymmetry there was in those constants. The half-bridge in drive/brake works as expected, though. Within 300ms it's drive/braked. Good enough for straightforward control.

Sreejith pointed me to: https://store.arduino.cc/usa/arduino-motor-shield-rev3 ... which is ... all of this and more.

PMOS is a bad idea unless you want to drive with a second set of transistors to reach the rails. Remember when 'off' PMOS needs to have a gate voltage of Vcc. The question is how to match the transistors. In the current SPICE model, you're using real transistors but an ideal drive without appreciable delay between NMOS/PMOS. 

If you delay too much, you'll freewheel and your flyback diodes will see a lot of current. If you ever have NMOS and PMOS on together, you'll short your power supply through about 50mOhm and see ~140A blow for, say, what you HOPE is a few microseconds. 

I think it's better to burn out flyback diodes, don't you? I mean.. that's not ideal either but at least they're built for it, on small timescales. 

So the next things to check are:
1. Make sure braking actually... does something, to be worth the complexity. Though I suppose the 'benefit' is you don't fry your electronics or add a ton of noise or ground bounce to your lines. So... remove the brake portion - Disconnect that transistor. What happens?
    Definitely speeds it up - but more importantly, dramatically cuts time (10+ms -> ns) that flyback diodes conduct.
2. Simulate with BJT to understand voltage drop.
    Yep... you don't seem to know what's going to happen in this circuit.
    Spice modeling so far has been a disaster. Need to follow along with the 
    tutorial and model each bit. Somehow having transistors conduct in reverse...



Appa Ideas:
Measure on-resistance of L298, try cap + that R and see how long can sustain. 
If that is fine, then ok, use it, otherwise try counter (for PWM) plus external circuit with
2-pole switches to decide which transistor to turn off first.

Next Steps:

You actually need to have parts in front of you now, to make measurements.
You've gone far enough on simulation and what you see online.
So, the next step is to get a motor, and show me its numbers.
Then we'll tweak from there.

---------------

drone - motor circuit. part ids. timing #s. requirements for pwm + buffer timing. parts. full circuit with parts & timing & power specifications without any measurement. then, add measurement. timing #s. and so on. once pure motor circuit is ready, order it & all needed parts (uc, power supply, measurement tools, ... and have a list of what you're going to measure).

Stm32f4 has many timers with dead time into pwm. No shoot through.

For opto need 25ma each.. probably want buffers.

Maybe have two batteries? Small for mcu? Totally isolated supplies?

Need discovery board for testing motor driver circuit... Can also use for studying fwup WiFi and dma, .. with sensor. Only really need imu to start. 

Probably worth making pcb only after basics worked out.

Adafruit chare drive circuit for lipo. Bat had protection built in. Check ratings. Charge on device. Simpler. Low weight anyways.

Blu control app on phone gyro on phone and scroller. First pass just angle control. 

Need voltage readout. Zener and opto to get high side switch. Low side just adc. 
Sanity Checks --

Basic Madgwick Complementary Filter --
  Zero rotation. Converges.
  1-Axis Rotation. Converges for x,y,z
    the non-zero 'x' magnetic field requirement is crucial
    the derivation of the simplified gradient assumes this
    if you have a 'y' component but no 'x' then only the z matters...
    and if you have a zero z component... it doesn't matter how you rotate there.
    it would look like the magnetic field didn't matter.
  3D Rotation.
    Converges without noise.

MCF with Magnetic Distortion Compensation --
  3D Rotation
    Converges without noise within 40 frames at 100Hz (0.5s) then stays locked.

MCF + MDC + Gyro Bias Estimation --
  3D Rotation
    Converges without noise within 40 frames at 100Hz (0.5s) then stays locked.

Add in zero mean gyro noise to the tune of 3 degrees per second per axis, iid.
  3D Rotation
    Converges without noise within 40 frames at 100Hz (0.5s) then stays locked.

Add in zero mean gyro noise to the tune of 180 degrees per second per axis, iid.
  3D Rotation
    Converges but is buffetted about by noise throughout the simulation.

Add in gyro bias
  3D Rotation
    Converges for bias even up to the 180 dps range iid in all axes.
    Beta, Zeta BOTH need to be tuned to match the scale of spread, bias, of course.

Add in zero mean compass noise

Add in zero mean accel noise

Add in low frequency accel oscillation on the scale of gravity. Doesn't matter if it's physically relevant. The swing is the key.
  Will need to update "a_i" = direction of gravity to "a_i" = acceleration felt by object.

Show me inertial drift (does need to be animated) to understand the delay, error timescale and the error scale. You can update the base point of the vectors to do this.

Add in time jitter, buffering delay, and interpolation error

Write out a simple drone mechanics model
Simulate it (torques in free_body input step-by-step instead as identically zero)
Linearize the model about the horizontal. Design your PID controller.
Simulate the PID controller.

Next -- Push for first flight. KISS.
Build!
  Mechanical (purchase)
  Electrical (drive, safety, 2s motors -> bom -> pcb)
  FW (drivers, controller, logger, tools)

